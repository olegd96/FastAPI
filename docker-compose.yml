version: '3.7'
services:
  nginx:
    build:
        context: .
        dockerfile: "Dockerfile.nginx"
    container_name: booking_nginx
    ports:
      - 70:80
      - 443:443
    links:
      - booking
      - flower
      - celery
      # - elasticsearch
      # - kibana
    networks:
      - booking_network

  db:
    image: postgres:15
    environment:
      - POSTGRES_PASSWORD=postgres
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5431:5432
    networks:
      - booking_network
  
  redis:
    image: redis:7
    container_name: booking_redis
    networks:
      - booking_network
    
  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    volumes:
      - ./fastapi-logs:/booking/app/logs
      - shared-volume:/booking
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - elasticsearch
    # command: ["/booking/docker/app.sh"]
    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    # ports:
    #   - 7777:8000
    networks:
      - booking_network

  celery:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery
    # command: ["/booking/docker/celery.sh", "celery"]
    volumes:
      - shared-volume:/booking
    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO"
    env_file:
      - .env
    depends_on:
      - redis
      - booking
    networks:
      - booking_network  

  celery_beat:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery_beat
    #command: ["/booking/docker/celery.sh", "celery_beat"]
    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO -B"
    env_file:
      - .env
    depends_on:
      - redis
      - booking
    networks:
      - booking_network

  flower:
    image: booking_flower
    build:
      context: .
    container_name: booking_flower
    # command: ["/booking/docker/celery.sh", "flower"]
    command: sh -c "celery --app=app.tasks.celery:celery flower --url_prefix=/flower"
    env_file:
      - .env
    depends_on:
      - redis
    # ports:
    # - 5555:5555
    networks:
      - booking_network

  elasticsearch:
    image: elasticsearch:7.17.23
    container_name: elasticsearch
    ports:
      - 9100:9200
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
    networks:
      - booking_network

  kibana:
    image: kibana:7.17.23
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - booking_network

  filebeat:
    build:
      context: ./filebeat
    container_name: filebeat
    volumes:
      - ./fastapi-logs:/booking/app/logs
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - booking_network

  # prometheus:
  #   image: prom/prometheus:v2.43.0
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheusdata:/prometheus
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090

  # grafana:
  #   image: grafana/grafana:9.4.7
  #   container_name: grafana
  #   volumes:
  #     - grafanadata:/var/lib/grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
      
volumes:
  postgresdata:
  # grafanadata:
  # prometheusdata:
  shared-volume:
  elasticsearch_data:
    driver: local

networks:
  booking_network:



